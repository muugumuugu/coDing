GIT. version control
GITHUB.- collab

-Repo: A project
-Commit: Save File
	-hash
	-allow history browsing with notes
-Branching: main branch(default master)= root
	-other branches = experimentals
	-merge branches to include.
-Pull Req:request to merge branches/ forks.
-Fork:create a duplicate , no change to core repo.
-Issues: to resolve, suggestions or bugs,ideas, sticky notes of todos
	-if u commit with a fixes #issueId, issue closed automaticalyy with that commit
-Clone: Download/pull from server
-Remote: clone living on some server, here, GITHUB.
- make a branch named gh-pages. this hosts ur site :)).


git commands

git commit -a -m "msg"
	commits all stuff in curr rep with msg
git config --global user.name "name"
git config --global user.email "mail"
git status
	checks changes, branch , etc.
git log -n
	shows history upto last n commits/branches in Vim, exit by :q
git remote -v
	lists remotes assosiated, and describes them
git remote remotename branchname
	pushes stuff into repo clone on server
git init
	make directory repo
git add filename
	stage files to commit, update these changed files only
git commit
	commit the staged files.
git remote add serverName serverUrl
git pull servername branchename
	get changes made on server.

eg:
git branch -M nameofmainbranch
git remote add origin https://github.com/MoguCoder/cTrainStuff.git
git push -u origin nameofmainbranch